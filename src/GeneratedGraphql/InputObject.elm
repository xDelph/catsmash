-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GeneratedGraphql.InputObject exposing (VoteInput, VoteInputRequiredFields, buildVoteInput, encodeVoteInput)

import GeneratedGraphql.Interface
import GeneratedGraphql.Object
import GeneratedGraphql.Scalar
import GeneratedGraphql.ScalarCodecs
import GeneratedGraphql.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


buildVoteInput : VoteInputRequiredFields -> VoteInput
buildVoteInput required =
    { catId = required.catId }


type alias VoteInputRequiredFields =
    { catId : String }


{-| Type for the VoteInput input object.
-}
type alias VoteInput =
    { catId : String }


{-| Encode a VoteInput into a value that can be used as an argument.
-}
encodeVoteInput : VoteInput -> Value
encodeVoteInput input =
    Encode.maybeObject
        [ ( "catId", Encode.string input.catId |> Just ) ]
